{"path":"Resources/Pasted Image 20240205135720_587.png","text":"private List<InspectionItem> CreateCoatingItem(string resultDbName, string selectQuery) { var inspItems = new List<InspectionItem>(); var overviews = connection?.ExecuteQuery<TB_CCI_CT_OVERVIEW>(resultDbName, selectQuery); if (overviews?.Any() is true) { foreach (var overview in overviews) { var pebGUID = overview.PCBGUID; var defectGUID = overview.DefectGUID; var areaGUID = overview.AreaGUID; int arrayldx = overview.ArrayIdx ?? 1; int unitID = (int)overview.UnitID; int arrayGroupIdx = overview.ArrayGroupIdx ?? 1; var passValues = new List<bool?> { overview.C_IsPass, overview.B_IsPass, overview.I_IsPass L var isPass = passValues.Where(x => x != null).ALl(x => x.Value); var failValues = new List<bool?> { overview.C_IsFail, overview.B_IsFail, overview.I_TsFail I var isFail = failValues.Where(x => x != null).ALL(x => x.Value); var item = new InspectionItem(overview.ItemName, TtemType.Coating, pcbGUID, defectGUID, areaGUID, arrayTdx, arrayGroupIdx, unitId, isPass, isFail); SetCoatingMeasureResult(resultDbName, item); inspItems.Add(item); } } return inspItems; }","libVersion":"0.3.2","langs":"eng"}