{"path":"Resources/Pasted image 20241016100614.png","text":"nanespace DataControlSystem.Core.BehaviorTree ey — public class ApplySkipFovByBadmark : BehaviorActionNode re—— . e [ = x 2retrences e protected override BehaviorStatus OnInvoke() = ~ZE== | StageStopCommand.cs ‘ { He= | BehaviorStatus returnvalue = BehaviorStatus.Failure; e StatusChange.cs | logger.Trace($\"{NLogHelper. Introduceself(this)}\"); u .z | DuallaneMulti...entHandler.cs I === | PostProcessBehaviorTree.cs |z = . . B | {\"y 1 === | nspectionite...ignMaterial.cs || var jobcontext = JobContext.TryGet(); + === | MeasureAndJu...haviorTree.cs || var inputpatablock = InputDatablock.TryGet(); === | HeightRecons...TreeNodes.cs || var mcsendpoint = McsEndpoint.TryGet(); = || var envBadmarkItem = (EnvItem.EnvItemBadmarkView)EnvItemHandler.Get(RecipeCode.EnvBadmark, inputDatablock.BoardDetail.InspectionEnv); = === |JobHandlercs P u ez | Instantinspection.cs || var badmarkcount = inputDatablock.BoardDetail.BadnarkobjectInspectionResults.select(x => x.Value).OfType<ObjectInspectionResult>() ey | ——— - _Select(y => y.VisionResult).uhere(g => g.ResultSets.Any(h => h.VisionItemResult == EnumResultStatus.eGD)).Count(); 0= | IpoDriver-FovOptimize.cs i R N [ || var arrayCount = jobContext.SearchArrays().Count; == DispatchBehaviorTree.cs || [F (envbadnarkiten TsAlertIfALIATraysATeBadnarks &6 badnarkCount == arrayCount == | BaseColorTeac...haviorTree.cs oyt . st S22 DataControlSyst...ntegrationTests H | | BadmarkSequence.BadmarkErrorAction(new BadmarkErrorReason() { errorReason = BadmarkErrorReason.ErrorReason.AllArraysHaveBadmarks }, == . - mcsEndpoint. Info.Currentlaneld, Stage.Get(), inputDatablock.BoardInfo.DryRun); | [ e s || ((BoardInfo)inputatablock.BoardInfo).BoardbefectCode = DefectCode.AllBadmark; | == |enestogetestes { | | return (veturnValue = BehaviorStatus.Success); === | ProcessPipelineTestcs P .= P u =\" DataControlSystem.Main || if (envBadmarkItem.InspectionstopOption == EnvItem.EnvItemBadmarkView.InspectionstopBadmarkoption.AllowableNunberReached === |Programecs | | & envBadmarkItem.IsMaximumNumberofBadmarkEnable =4 { | | && badmarkCount >= envBadmarkItem.MaximumNumberofBadmark) \" === InfraCommon I . . ] PG H I | BadmarkSequence.BadmarkErrorAction(new BadmarkErrorReason() { errorReason = BadmarkErrorReason.ErrorReason.MaximumNumberofBadmarksExceeded }, I B I nmcsEndpoint. Info.CurrentLaneld, Stage.Get(), inputDatablock.BoardInfo.DryRun); . Z=— |BoardDetailcs {1 | return (returnvalue = BehaviorStatus.Success); » <E==== | AlertNotice.cs (I [ [ R | return (returnvalue = BehaviorStatus.Success); # === | Boardinspectio...bjectDetails [ el [","libVersion":"0.3.2","langs":"eng"}