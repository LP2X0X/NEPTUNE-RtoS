{"path":"Resources/Pasted Image 20240202140851_267.png","text":"public async Task<List<InspectionItem>> CreateInspectionItemsAsync(Board boardModel) € return await Task.Run(() = 1 VaF InspectionItenInBoard = new List<InspectionItem>(); if (boardModel is null || !boardHodel.PcbGuid. HasValue) return InspectionItenInBoard; Var overviewTalbeNanes = GetOverviewTableNames(boardHodel); if CoverviewTalbeNames?.Any() is false) return InspectionItennBoard; Func<string, string> GetSelectQuery = (tableName) => $\"SELECT » FROM {tableName} WHERE PCBGUID = '{(Guid)boardHodel.PcbGuid}' *; var intersectOvervien = overvienTalbeNames. Intersect(tableNaneFunchap.Keys); Var inspectionTtems = intersectOvervien.SelectMany(tableNane => tableNaneFunchap.ContainsKey(tableNane) 2 tableNaneFunchap[ tableName]? . Invoke(boardiodel . Resul tDBNane, GetSelectQuery(tableNane)) : L) R b R NEE if CinspectionTtens.Any()) TnspectionTtenTnBoard. AddRange(inspectionTtens); return InspectionItenTnBoard; bH }","libVersion":"0.3.2","langs":"eng"}